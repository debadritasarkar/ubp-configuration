#
# $Id$

# This is the id of the TXE node which is used as part of the transaction reference
# for transactions handled by this node. If running multiple nodes in parallel
# this id MUST be different for each node!
#
node_id=01

# JVM parameters
#
#env.jre.start_heap=128m
#env.jre.max_heap=512m
#env.jre.opts=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=9010,suspend=n

## TXE services
#
# Which URL to use to export the transaction processing client interface
#
processing_service_url=http://0.0.0.0:8777/txe/transactionProcessing

# Which URL to use to export the transaction exporting client interface
#
exporting_service_url=http://0.0.0.0:8777/txe/transactionExporting

# Which URL to use to export the subscriber client interface
#
subscriber_service_url=http://0.0.0.0:8777/txe/subscriber

# Which URL to use to export the reseller client interface
#
reseller_service_url=http://0.0.0.0:8777/txe/reseller

# Which URL to use to export the systemadmin client interface
#
systemadmin_service_url=http://0.0.0.0:8777/txe/systemadmin

# Which URL to use to export the eventcallback interface
#
eventcallback_service_url=http://0.0.0.0:8777/txe/callback

coreproxyconnection.url=http://svc-coreproxy:8912/coreProxy


## Platform Web Services
#
# Location of the reseller transaction interface
#
resellertransactionconnection.url=http://svc-coreproxy:8983/reseller

# Location of the voucher database link interface
#
voucherdbconnection.url=http://svc-coreproxy:8912/voucherDb

# Location of the subscriber database transaction interface
#
subscribertransactionconnection.url=http://svc-subscribersystem:8087/subscribers/transaction

# Location of the subscriber database management interface
#
subscribermanagementconnection.url=http://svc-subscribersystem:8087/subscribers/management

# The URL for publishing the custom operations to subscribers system
#
subscriberCustomOperationService.url=http://svc-subscribersystem:8087/customOperations

# URL for publishing the SOA integration registration service
#
#sim_registration_service.url=http://localhost:8027/soa-integration/registration

# URL for publishing the EKYC integration registration service
#
#ekyc_registration_service.url=http://localhost:8025/kyclink/subscriber

# The URL for anonymity-system tsn service
# if is set, the anonymity-system will be used to resolve TSN->MSISDN for resellers or subscribers
anonymityTsnService.url=http://localhost:8083/tsnService

# Location of core single sign-on interface
#
singlesignonconnection.url=http://localhost:8911/singleSignon

# Account Operation Link Connection url

accountoperationlink.url=http://svc-account-management:8092/accountsystem/operations

# Subscriber Product service Link Connection url

subscriber_product_service.url=http://localhost:8999/flytxt-link/services

# Communication Message Service Link Connection url
communicationmessagelink.url=http://localhost:8027/soa-integration/communicationmessage

# Voucher product service link connection url
voucher_product_service.url=http://svc-coreproxy:8912/productService

# Configuration for sending a request to USSDApp
ussdapp.url=http://svc-ussdapp:8680/cc/CC
ussdapp.shortcode.resellerVisitConfirmationMenu=107

# Profiling systems
profilingsystemconnection = http://localhost:9808/profiling/getCustomerProfile

# Credit Service
creditserviceconnection = http://localhost:8099/api/services/

# Configuration for the connection to the ersifplatform-internal
#
ersplatforminternal.url=http://localhost:8765/suggestedstock
ersplatforminternal.user=
ersplatforminternal.password=

# Location of the report transaction interfaces
# All transactions starting with SUP are handled by the support service
reporttransactionconnection.1.url=http://localhost:8071/supportsystem/reports
reporttransactionconnection.1.report_id_regexp=SUP.*
reporttransactionconnection.layout_language=en

reporttransactionconnection.2.url=http://localhost:8081/eire/ws/reportTransaction
reporttransactionconnection.2.report_id_regexp=.*

# ReportId for etopup last transaction
reporttransactionconnection.etopup_last_transaction=SUP_LAST_TRANSACTION
# ReportId for etopup transaction status
reporttransactionconnection.etopup_transaction_status=SUP_TRANSACTION_STATUS

# Location of the reseller management interface
resellermanagementconnection.url=http://localhost:8911/resellerManagement

# Location of the system management interface
systemmanagementconnection.url=http://localhost:8911/systemManagement

# reseller_last_transactions is used by: getLastTransactionStatus, getMolletLastTransactionStatus
reporttransactionconnection.report_mapping.reseller_last_transactions=SUP_LAST_TRANSACTIONS
# subscriber_last_transactions is used by: getLastTransactionStatus, getMolletLastTransactionStatus
reporttransactionconnection.report_mapping.subscriber_last_transactions=SUP_SUB_LAST_TRANSACTIONS
# reseller_transaction_status is used by: getTransactionStatus, getMolletTransactionStatus
reporttransactionconnection.report_mapping.reseller_transaction_status=SUP_TRANSACTION_STATUS

# Which AccountTransactionEngine to use. Possible choices: LEGACY, CLEARING and ORDER.
# LEGACY - Makes one method call per transaction, debits first
# CLEARING - Sends all transactions to the same account provider, requires a clearing procedure on the side
# ORDER - sort the transaction with margin rule Id and, makes one method call per transaction.
#          Transaction sorting comparator can be defined by property account_transaction_engine.comparator.className
account_transaction_engine=LEGACY
#account_transaction_engine.comparator.className=com.seamless.ers.txe.transaction.comparator.MarginRuleIdComparator

# Location of all principal systems and which principal id types they handle
#
principal_systems.SUBSCRIBERS.id_types=SUBSCRIBERID SUBSCRIBERKEY SUBSCRIBERMSISDN SUBSCRIBERANONYMOUSID
principal_systems.SUBSCRIBERS.url=http://svc-subscribersystem:8087/principal
principal_systems.RESELLERS.id_types=RESELLERID RESELLERUSER RESELLERMSISDN RESELLERIDANDMSISDN ADMINUSER TERMINALID RESELLERUSERNAME
principal_systems.RESELLERS.url=http://svc-coreproxy:8912/principalService
#principal_systems.RESELLERS.use_ssl=false
#principal_systems.RESELLERS.keyManagerFilePath=/opt/seamless/conf/keystore.jks
#principal_systems.RESELLERS.trustManagerFilePath=/opt/seamless/conf/cacerts.jks
#principal_systems.RESELLERS.trustKeyStoreFilePassword=seamless2020
#principal_systems.RESELLERS.trustManagerType=SunX509
#principal_systems.RESELLERS.disableCNCheck=false

principal_systems.RESELLERS.allow_resolve_principal_using_msisdn_as_webuser=false
principal_systems.SUBSCRIBERS.allow_resolve_principal_using_receiver_country=false

# Custom operation service providers
# If the url is specified as "VOID" the custom operation will be
# treated as No operation and will return success if the principals
# are resolved correctly.
service_providers.1.provider_id=SUBSCRIBERSYSTEM
service_providers.1.operation_id=SUBSCRIBER_.*
service_providers.1.url=http://svc-subscribersystem:8087/customOperations
service_providers.2.provider_id=RESELLERSYSTEM
service_providers.2.operation_id=RESELLER_.*
service_providers.2.url=http://localhost:8911/customOperations
service_providers.3.provider_id=VOIDPROVIDER
service_providers.3.operation_id=VOID_OPERATION
service_providers.3.url=VOID
service_providers.4.provider_id=VASMANAGER
service_providers.4.operation_id=FAF_.*
service_providers.4.url=http://svc-link-simulator:8096/customOperations
service_providers.5.provider_id=COREPROXY
service_providers.5.operation_id=SEND_SMS_NOTIFICATION.*
service_providers.5.url=http://svc-coreproxy:8912/customOperationsService


## Note that accountconnection props are deprecated.
## These props are not used anywhere inside TXE code.
accountconnection.classname=StaticFinderMap
accountconnection.1.account_type_id=AIRTIME
#accountconnection.1.account_provider_id=SOMETELCO
accountconnection.1.classname=FixedAccountClientConnection
accountconnection.1.server_url=http://svc-accountlink:8091/accountlinksimulator



accountconnection.2.account_type_id=MOLLET
accountconnection.2.classname=FixedAccountClientConnection
accountconnection.2.server_url=http://svc-account-management:8092/accountsystem

accountconnection.3.account_type_id=RESELLER
accountconnection.3.classname=FixedAccountClientConnection
accountconnection.3.server_url=http://svc-account-management:8092/accountsystem

accountconnection.4.account_type_id=BOOKKEEPING
accountconnection.4.classname=http://svc-account-management:8092/accountsystem

accountconnection.5.account_type_id=MOLLET_VOUCHER
accountconnection.5.classname=FixedAccountClientConnection
accountconnection.5.server_url=http://svc-account-management:8092/accountsystem

accountconnection.6.account_type_id=DATA_BUNDLE
accountconnection.6.classname=FixedAccountClientConnection
accountconnection.6.server_url=http://svc-accountlink:8091/accountlinksimulator

purchase_providers.1.provider_id=ERS_VOUCHERS
purchase_providers.1.product_id_type=PRODUCT_SKU|GLOBAL_SKU
purchase_providers.1.url=http://svc-coreproxy:8912/voucherPurchase

purchase_providers.2.provider_id=TICKET_SIMULATOR
purchase_providers.2.product_id_type=TICKET
purchase_providers.2.url=http://svc-accountlink:8091/ticketPurchase


purchase_providers.3.provider_id=VOUCHER_ON_DEMAND
purchase_providers.3.product_id_type=VOD
purchase_providers.3.url=http://localhost:9099/voucher-factory/services

purchase_providers.4.provider_id=SOA
purchase_providers.4.product_id_type=SOA_VOUCHER
purchase_providers.4.url=http://localhost:8027/soa-integration/generatevoucher
purchase.voucher.soa-integration.enabled=false
# To redeem voucher using soa link
#purchase.voucher.soa-integration.redeem_voucher_enabled=true

## Account services
#
# The configuration of the connection to account services
#
# Example:
# You map account types to services.
# First you need to specifY the account type
#accountservice.1.account_type_id=AIRTIME
# Then specify the service type, available types are:
#  WEBSERVICE - for the new WS interface in ersplatform-internal
#  LEGACY - For the old WS interface in ersifextlink
#  VOID -  for an always successful service that does nothing (for BOOKKEEPING)
#accountservice.1.service_type=WEBSERVICE
# Then follows type dependant settings, for WEBSERVICE and LEGACY you need
# to specify the server URL
#accountservice.1.server_url=http://svc-accountlink:8091/accountlinksimulator
# Last but not least, account_description can be specified
#accountservice.1.account_description=Airtime
#
# Should TXE update principal account status after getAccountInformation
# call in the principal system?
#accountservice.1.update_principal_account_status=false

accountservice.1.account_type_id=AIRTIME
accountservice.1.service_type=LEGACY
accountservice.1.server_url=http://svc-haproxy:8010/diameter-link
accountservice.1.account_description=Airtime

accountservice.2.account_type_id=MOLLET
accountservice.2.service_type=LEGACY
accountservice.2.server_url=http://svc-account-management:8092/accountsystem

accountservice.3.account_type_id=RESELLER
accountservice.3.service_type=LEGACY
accountservice.3.server_url=http://svc-account-management:8092/accountsystem



accountservice.4.account_type_id=RESELLER_CURRENCY
accountservice.4.service_type=LEGACY
accountservice.4.server_url=http://svc-account-management:8092/accountsystem

accountservice.5.account_type_id=BOOKKEEPING
accountservice.5.service_type=LEGACY
accountservice.5.server_url=http://svc-account-management:8092/accountsystem

accountservice.6.account_type_id=MOLLET_VOUCHER
accountservice.6.service_type=LEGACY
accountservice.6.server_url=http://svc-account-management:8092/accountsystem

accountservice.7.account_type_id=AIRTIME_POSTPAID
accountservice.7.service_type=LEGACY
accountservice.7.server_url=http://svc-accountlink:8091/accountlinksimulator
accountservice.7.account_description=Airtime Postpaid

accountservice.8.account_type_id=DATA_BUNDLE
accountservice.8.service_type=LEGACY
accountservice.8.server_url=http://svc-haproxy:8010/diameter-link


## Properties to topup link system.
## when there is a need for a single AccountType say AIRTIME to have different accountSystem and topup link system, then these properties can be used.
## The one specified in accountservice.* props will be used for accounting and the following props will be used for link connection props.
##topuplinkconnection.1.account_type_id=AIRTIME
##topuplinkconnection.1.service_type=LEGACY
##topuplinkconnection.1.server_url=http://svc-accountlink:8091/accountlinksimulator
##topuplinkconnection.1.account_description=Airtime

# Account Service Fallback
#
# Not Mandatory
#
# This configuration is mapped with a particular type of Account,
# and a list of ErrorCodes.
# If this fallback option is true, and the topup fails for a
# accountlink within the list of configured ErrorCodes it will redirect the topup
# to this configured accountlink for the second time.

fallbackAccountService=true
#To disable any specific account account type for topup. Like for Data Bundle account, fallback is not require.
#fallbackDisableForAccountTypes=DATA_BUNDLE
fallbackAccountServiceName=AIRTIME_POSTPAID
fallbackErrorCodes=301,302
# For a prepaid number which is rejected from the postpaid third party link will go to the fallback path
# depending upon the account servive configured in (fallbackAccountServiceName).If we enable this configuration
# only profile of the transaction will be changed.
fallbackTransformProfileEnabled=false
fallbackTransformProfileName=TOPUP
fallbackTransformAccountTypeid = AIRTIME
# will use to fallback on grandparent
fallbackOnGrandParent=true
# For Validating sender account
min_value=10
# To define external account systems or custom operation Ids for specific VAS
# services use vasservices properties. operation_id is required.
# One can define server_url + classname or link_operation_id or both.
# If link_operation_id is the same as operation_id, then it can be omitted.
#
vasservices.1.operation_id=CMB
vasservices.1.classname=TransactionVoidConnection

#vasservices.2.operation_id=BIC_INFO
#vasservices.2.server_url=http://svc-accountlink:8091/accountlinksimulator
#vasservices.2.classname=FixedAccountClientConnection
#vasservices.2.link_operation_id=BIC_INFO

# Resellers Operation
# Resellers can activate themselves by sending activation
# code over different clients. Setting activation_code true will enable activation code
# checking.
resellers.activation_code=true

# Sub-resellers approving re-linking can either directly select there pin if true
# otherwise they needs to supply their old pin.
resellers.link_subreseller_approval_cpin=true

## Determine if the transaction should be reversible.
# reversal.supported_tx_profiles : Use this property when you want to reverse all the transactions with the given profile id.
# reversal.criteria.<profile_id> : Use this property when you don't want to reverse all the transactions and you only want them to be reversible based on a criteria.
#                                  The result of the freemarker expression should evaluate to string literal "true".
# N.B. Profile transformation will affect.
#
# The supported reversal operations
#reversal.supported_tx_profiles=CREDIT_TRANSFER, MOLLET_VOUCHER_CREATE, MOLLET_TRANSFER
reversal.supported_tx_profiles=CREDIT_TRANSFER

# Within profile selection.
reversal.criteria.TOPUP=${(txn.getField("MIDDLEWARE_ACCOUNT_TYPE")?? && txn.getField("MIDDLEWARE_ACCOUNT_TYPE")?matches("PREPAID"))?string}

# Example of validating sender/receiver principal on charging system
# By Default it is sender principal if you want to validate receiver on charging system just enable following property
# Accepted values of this property key are: SENDER or RECEIVER.
# giving value SENDER to this key is equillant to disabling it.
 transaction.topup.validate_topup_principal=RECEIVER

# Property added to validate sender principal for P2P flow.
# Only accepted value is Sender. To validate only Sender/Receiver use this property transaction.topup.validate_topup_principal.
# If requirement is to validated both  sender and receiver principal. Set this property transaction.topup.validate_topup_principal
# to RECEIVER and  property transaction.topup.validate_topup_sender_principal to sender.
# To validate only one principal DO NOT USE THIS PROPERTY.
#transaction.topup.validate_topup_sender_principal=SENDER

# State machine customizations:
#
#   prepare_for_result_codes - applies TransactionChainState.Pending to all
#   REQUESTs that fail with the specified result codes (comma separated list).
#   "Prepare" because it simulates the behavior of PREPARE requests, which
#   postpones the transactions until further approval.
#   Example:
#     statemachine.prepare_for_result_codes=1029
#     will prepare transactions if the receiver was not found so they can be
#     approved later when the receiver registers.

# SMS provider connection, by default assumes kannel is running on the same host with standard configuration
smsprovider.classname=HttpSMSProvider
smsprovider.url=http://svc-haproxy:13013/cgi-bin/sendsms?username=ers&password=recharge
# SMS prefix to be added to the destination number.
smsprovider.to_prefix=+

# Mail server setting for general notification emails
# Fill in valid mail server host (relay or other), mandatory
emailAlert.mailServerHost=sdsmailrelay.dev.ts
# Put the port that the SMTP server runs on, mandatory
emailAlert.mailServerPort=25
# Who the email is from, optional when using relay server
emailAlert.fromEmail=noreply@seamless.se
# password for the provided mail address, optional when using relay server
#emailAlert.fromEmailPassword=


#locale.default_currency=SEK
# MSISDN settings
# Default country code padded to msisdn in case entered msisdn with only a networkcode
# (starting with single 0)
#locale.default_country_code=46
#Default network code padded to msisdn in case entered msisdn less than digits of default_network_code_digits + subscriber_number_digits
locale.default_network_code=7
#Length of msisdn excluding network code and country code
#locale.subscriber_number_digits=7

# Accepted country codes: These will be accepted even without an international prefix
#locale.accepted_country_codes=46 44 358 92 48

# Length of msisdn excluding network code and country code
#locale.subscriber_number_digits=8

# The length of subscriber number can now also be set as min and max values to allow
# for varying length msisdn:s.
# This setting will override locale.subscriber_number_digits
#locale.min_subscriber_number_digits=7
#locale.max_subscriber_number_digits=7

# Optional properties for the length of the full MSISDN, default values are 10 and 15
#locale.min_msisdn_length=10
#locale.max_msisdn_length=15

# Optional property to set range of allowed network_codes.
#locale.accepted_network_codes=7

# Does a number that starts with a network code require a leading '0'?
# (0 will not be counted as part the the network code and will be removed from the MSISDN)
#locale.network_code_requires_0_prefix=true

# This controls if the validation for the subscriber msisdn is required or txe should just bypass it.
# If true, it will validate subscriber msisdn
# If false, it will not validate subscriber msisdn
validate_subscriber_msisdn=true
# Currency settings
#Decimal separator
#locale.decimal_separator=,
#Thousand separator
#locale.thousand_separator=.

# Custom currency settings.
#
# The format for the custom currency setting is:
# locale.custom_currency.XTS=3
#
# In this case XTS is the three letter ISO 4217 code (XTS is a code reserved for testing)
# and 3 is the amount of decimals. You can either make up your own currency code or override
# an existing currency code.
#
#locale.custom_currency.XTS=3


# CMS settings, used to resolve the request result message texts
cms.classname=SimpleFileCMS
# Optional default language in case the language is missing in the request to the CMS system.
# cms.default_language=en
cms.languages=en log fr ar
cms.en.filename=messages_english.properties
cms.en.encoding=UTF-8
cms.fr.filename=messages_french.properties
cms.fr.encoding=UTF-8
cms.ar.filename=messages_arabic.properties
cms.ar.encoding=UTF-8
cms.log.filename=messages_log.properties
cms.log.encoding=UTF-8

# Flow control settings
flowcontrol.default.asynchronous=false
flowcontrol.default.cooldown_time=100
flowcontrol.default.max_parallel_requests=100
flowcontrol.default.log_stats=true
flowcontrol.default.log_stat_interval=60

# Service manager settings
# The default graceful shutdown time for stopping the server in milliseconds.
# In case a shutdown takes longer time, a warning message will be printed in the log.
servicemanager.shutdown_hooks=SIGHUP:timeout=60000

# Transaction log provider settings
transactionlog.class_name=com.seamless.ers.txe.transactionlog.xmlbeans.XMLBeansTransactionLoggingFactory

# ERS Reference Generator service connection
transactionlog.log.reference_generator_service.url=http://svc-reference-generator:9997/reference-generator
transactionlog.log.reference_generator_service.next_reference.uri=/next-reference

transactionlog.log.db_driver=org.mariadb.jdbc.Driver
transactionlog.log.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.log.db_user=refill
transactionlog.log.db_password=refill
transactionlog.log.data_format=json
transactionlog.log.pool_min_size=40
transactionlog.log.pool_max_size=100
transactionlog.log.pool_simultaneous_build_throttle=40
transactionlog.log.fallback_logdir=/var/seamless/log/txe/fallback

# Classic reference generator with 25 digits using:
# - Node id
# - Time stamp
# - Sequence number (that will wrap when restarted etc)
#
transactionlog.log.reference_generator.generate_from_component=true
transactionlog.log.reference_generator.class_name=com.seamless.common.referencegeneration.TimestampReferenceGenerator

# Number of digits in the sequence number part
#
transactionlog.log.reference_generator.reference_counter_length=6

# The format of the timestamp part of the reference
#
transactionlog.log.reference_generator.timestamp_format=yyyyMMddHHmmssSSS

# If a timestamp is repeated (eg beccause of clock sync etc)
#  this is the number of times it is allowed to repeat without logging a warning
#
transactionlog.log.reference_generator.timestamp_repeat_warning_count=10

# New reference generator, using the node id and a node-unique database sequence number
#

# transactionlog.log.reference_generator.class_name=com.seamless.common.referencegeneration.DatabaseSequenceReferenceGenerator
# Database connection for the sequence generator table
#
transactionlog.log.reference_generator.db_driver=org.mariadb.jdbc.Driver
transactionlog.log.reference_generator.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.log.reference_generator.db_user=refill
transactionlog.log.reference_generator.db_password=refill
transactionlog.log.reference_generator.db_autoCommit=true
transactionlog.log.reference_generator.pool_min_size=1
transactionlog.log.reference_generator.pool_max_size=100
transactionlog.log.reference_generator.pool_timeout=100

# The name of the reference number generated
# (used in error logs to determine which reference generator had a problem)
#
transactionlog.log.reference_generator.reference_name=ERS transaction reference

# The database table in which the sequence is stored (as a single row)
#
transactionlog.log.reference_generator.table_name=txe_transaction_reference_sequence

# The column name for the sequence counter
#
transactionlog.log.reference_generator.sequence_column_name=seqNo

# The number of digits in the sequence number part of the generated reference
#
transactionlog.log.reference_generator.num_sequence_digits=10

# The alphabet used to generate the reference sequence number
# Typically digits, but letters may be used to create a shorter transaction reference
#
transactionlog.log.reference_generator.sequence_number_alphabet=0123456789


#transactionlog.log.cache.cluster.1.url =localhost:7001
#transactionlog.log.cache.cluster.2.url =localhost:7003
#transactionlog.log.cache.cluster.3.url =localhost:7005
##################################################
# Set to true if distributed locking is to be used (For active active)
##################################################
transactionlog.log.useDistributedLocking=false
#transactionlog.log.transactionlocktimeout=60000
#transactionlog.log.locktimeout=600000

########################################
# These two new properties are introduced to provide the functionality of
# txe transaction archiver start/stop apart from txe, so that in case of any issue in archiver
# So for backward compatibility we have put thee two properties be default values are already assigned,
# these default values will allow txe to run as it is i.e. with archiver only.
# we can start/stop archiver without restarting txe.
# fallback true means txe will run exporter and archiver
transLogFallback=true
transactionlog.archive.classname=com.seamless.ers.txe.TXEStandaloneHost,se.seamless.ers.txe.rest.TXERestServiceHost,com.seamless.ers.txe.test.transactionlog.TestTransactionLogging,com.seamless.ers.txe.TXEStandaloneRestHost
# To run archive separately just change these two values :
# transLogFallback=false
# transactionlog.archive.classname=com.seamless.ers.txe.archiver.TXETransactionLogStandaloneHost /only this class to be changed/, se.seamless.ers.txe.rest.TXERestServiceHost,com.seamless.ers.txe.test.transactionlog.TestTransactionLogging
# NOTE : These properties are not mandatory , if you do not provide , default values will be taken and txe will run as it is.
############################

transactionlog.archive.db_driver=org.mariadb.jdbc.Driver
transactionlog.archive.db_url=jdbc:mysql://svc-haproxy:4306/transactionlog
transactionlog.archive.db_user=refill
transactionlog.archive.db_password=refill
transactionlog.archive.pool_min_size=1
transactionlog.archive.pool_max_size=100
transactionlog.archive.pool_simultaneous_build_throttle=40
# Time in seconds, indicates any derived datasource can only read data which
# is more than this many seconds old. DO NOT CHANGE IT UNLESS YOU ARE SURE WHAT
# YOU ARE DOING
transactionlog.archive.bucket_close_time=2

transactionlog.replication.active=true
transactionlog.replication.interval=1s
transactionlog.replication.batch_size=100




# Connection to the database for keeping track of business counters
businesscounters.db_driver=org.mariadb.jdbc.Driver
businesscounters.db_url=jdbc:mysql://svc-haproxy:4306/businesscounters
businesscounters.db_user=refill
businesscounters.db_password=refill
businesscounters.pool_max_size=100
businesscounters.pool_simultaneous_build_throttle=40


# Connection to the database for keeping track of duplicate transactions
shouldLoadDuplicateTransactionChecker=false
duplicatetransactionchecker.db_driver=org.mariadb.jdbc.Driver
duplicatetransactionchecker.db_url=jdbc:mysql://svc-haproxy:4306/duplicatetransactionchecker
duplicatetransactionchecker.db_user=refill
duplicatetransactionchecker.db_password=refill
duplicatetransactionchecker.pool_max_size=100
duplicatetransactionchecker.pool_simultaneous_build_throttle=40
duplicatetransactionchecker.clean_data_cron_expression=0 0 0/1 * * ?;
duplicatetransactionchecker.min_persistence_duration_in_mins=60

# --- License system settings ---
# How often the license manager updates its counters to license service
licensemanager.update_frequency=60000

# Path to license file
licenseservice.license_file=license.pgp
# How often license service checks db integrity
licenseservice.update_frequency=600000
# license service db settings
licenseservice.database.db_driver=org.mariadb.jdbc.Driver
licenseservice.database.db_url=jdbc:mysql://svc-haproxy:4306/licensecounters
licenseservice.database.db_user=refill
licenseservice.database.db_password=refill

# Example of license SMS notification settings
#
#licenseservice.notification.default_language=en
#licenseservice.notification.sender=1234
#
# buffer_period denotes the time in minute it should consider to avoid
# sending multiple sms from different nodes
#licenseservice.notifications.buffer_period=60
#
#licenseservice.notifications.state_notification_recipients=
#
#licenseservice.notifications.threshold_warnings.1.percentage=80
#licenseservice.notifications.threshold_warnings.1.notification_id=LICENSE_AT_80P
#licenseservice.notifications.threshold_warnings.1.notification_recipients=
#
#licenseservice.notifications.threshold_warnings.2.percentage=95
#licenseservice.notifications.threshold_warnings.2.notification_id=LICENSE_AT_95P
#licenseservice.notifications.threshold_warnings.2.notification_recipients=


## Pricing configuration
#
# Set list of pricing engines
# Syntax: pricing.engines.$engine_name$.$property_name$=$property_value$
# There are 4 types of pricing engine.
# 1. BeanshellPriceEngine
#       pricing.engines.A.classname=BeanShellPriceEngine
#       pricing.engines.A.script=pricing/mollet_transfer.bsh
# 2. SimpleTopupPriceEngine
#       pricing.engines.B.classname=SimpleTopupPriceEngine
# 3. FreePriceEngine
#       pricing.engines.C.classname=FreePriceEngine
# 4. ExternalPriceEngine
#       pricing.engines.D.classname=ExternalPriceEngine
#       pricing.engines.D.url=http://localhost:8080/core/priceengine
#       pricing.engines.D.product_SKU=CREDIT_TRANSFER

# --- EIRE configuration ---
# Default layout for legacy report
eire.layout_language=en
# ReportId for mollet last transaction
eire.mollet_last_transaction=MOLLET_001
# ReportId for mollet transaction status
eire.mollet_transaction_status=MOLLET_002
# ReportId for etopup last transaction
eire.etopup_last_transaction=REP_1106
# ReportId for etopup transaction status
eire.etopup_transaction_status=REP_1107

pricing.engines.MOLLET_TRANSFER.classname=BeanShellPriceEngine
pricing.engines.MOLLET_TRANSFER.script=pricing/mollet_transfer.bsh

pricing.engines.REDEEM_VOUCHER.classname=BeanShellPriceEngine
pricing.engines.REDEEM_VOUCHER.script=pricing/redeem_voucher.bsh

pricing.engines.MOLLET_DEREGISTER_SUBSCRIBER.classname=BeanShellPriceEngine
pricing.engines.MOLLET_DEREGISTER_SUBSCRIBER.script=pricing/mollet_deregister_subscriber.bsh

pricing.engines.MOLLET_DEPOSIT.classname=SimpleTopupPriceEngine
pricing.engines.SIMPLE_TRANSFER.classname=SimpleTransferPriceEngine

pricing.engines.SIMPLE_PURCHASE.classname=SimplePurchasePriceEngine
pricing.engines.SIMPLE_GRATIFICATION.classname=SimpleGratificationPriceEngine

pricing.engines.LEGACY_CREDIT_TRANSFER.classname=ExternalPriceEngine
pricing.engines.LEGACY_CREDIT_TRANSFER.url=http://svc-coreproxy:8912/coreProxy
pricing.engines.LEGACY_CREDIT_TRANSFER.product_SKU=CREDIT_TRANSFER

pricing.engines.LEGACY_MOLLET_VOUCHER_CREATE.classname=ExternalPriceEngine
pricing.engines.LEGACY_MOLLET_VOUCHER_CREATE.url=http://svc-coreproxy:8912/coreProxy
pricing.engines.LEGACY_MOLLET_VOUCHER_CREATE.product_SKU=CREDIT_TRANSFER

pricing.engines.LEGACY_R2S.classname=ExternalPriceEngine
pricing.engines.LEGACY_R2S.url=http://svc-coreproxy:8912/coreProxy
pricing.engines.LEGACY_R2S.product_SKU=TOPUP

pricing.engines.LEGACY_P2P.classname=ExternalPriceEngine
pricing.engines.LEGACY_P2P.url=http://svc-coreproxy:8912/coreProxy
pricing.engines.LEGACY_P2P.product_SKU=P2P

pricing.engines.LEGACY_VOUCHER.classname=ExternalPriceEngine
pricing.engines.LEGACY_VOUCHER.url=http://svc-coreproxy:8912/coreProxy
pricing.engines.LEGACY_VOUCHER.product_SKU=NA

pricing.engines.EXTERNAL_BUSINESS_LOGIC.classname=ExternalBusinessLogicEngine
pricing.engines.EXTERNAL_BUSINESS_LOGIC.url=http://svc-businesslogic:8922/businessLogic


pricing.engines.VOD_BUSINESS_LOGIC.classname=VODBusinessLogicEngine
pricing.engines.VOD_BUSINESS_LOGIC.url=http://svc-businesslogic:8922/businessLogic

# enableOnSiblingTransfer:
# This property represents if we want to enable ExternalBusinessLogicEngine for sibling transfer.
# If not set, default value of this property will be considered 'true'
# If set to false, pricing will be routed to BeanShellPriceEngine class and further configured script will be used.
pricing.engines.EXTERNAL_BUSINESS_LOGIC.enableOnSiblingTransfer=true
# In case enableOnSiblingTransfer is false, Following script will be used for alternative pricing of sibling transfer.

pricing.engines.EXTERNAL_BUSINESS_LOGIC.include_reseller_rewards_account=false

pricing.engines.EXTERNAL_BUSINESS_LOGIC.script=pricing/support_transfer.bsh

##When core and coreproxy are deployed as separate components then uncomment the following properties and comment the default properties.
#pricing.engines.LEGACY_VOUCHER.classname=ExternalLegacyPriceEngine
#pricing.engines.LEGACY_VOUCHER.url=http://localhost:8910/legacyPricing

pricing.engines.VAS.classname=BeanShellPriceEngine
pricing.engines.VAS.script=pricing/vas.bsh

pricing.engines.FREE.classname=FreePriceEngine

pricing.engines.SIMPLE_TOPUP.classname=SimpleTopupPriceEngine

pricing.engines.SIMPLE_REFUND.classname=SimpleRefundPriceEngine

pricing.engines.SUPPORT_TRANSFER.classname=BeanShellPriceEngine
pricing.engines.SUPPORT_TRANSFER.script=pricing/support_transfer.bsh

pricing.engines.FAF.classname=BeanShellPriceEngine
pricing.engines.FAF.script=pricing/faf.bsh

pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.classname=CommissionAdjustmentPricingEngine
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.url=http://svc-businesslogic:8922/businessLogic
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.script=pricing/support_transfer.bsh
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.mainBookkeepingAccountId=OPERATOR
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.mainCommissionAccountId=COMMISSION
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.mainBonusAccountId=BONUS
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.dedicatedCommissionAccountTypeId=EARNED_COMMISSION
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.outstandingAmountAccountTypeId=OUTSTANDING_AMOUNT
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.commissionAdjustmentTransactionProfiles=BANK_PAYMENT
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.commissionCalculationResellerTypes=agents,dcagent
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.autoRestockAgents=true
pricing.engines.COMMISSION_ADJUSTMENT_EXTERNAL_BUSINESS_LOGIC.commissionCalculationProfiles=TOPUP

pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.classname=DedicatedAccountBusinessLogicEngine
pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.url=http://svc-businesslogic:8922/businessLogic
pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.script=pricing/support_transfer.bsh
pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.resellerDedicatedAccountTypeId=FORFAIT
pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.bonusAccountTypeId=RESELLER
pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.bonusAccountId=bonusadmin
pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.applicable_product_skus=52
#pricing.engines.DEDICATED_ACCOUNT_EXTERNAL_BUSINESS_LOGIC.profileId=DATA_BUNDLE

pricing.engines.DIGITAL_SERVICES.enableOnSiblingTransfer=true
pricing.engines.DIGITAL_SERVICES.script=pricing/support_transfer.bsh

pricing.engines.DIGITAL_SERVICES.classname=DigitalServicesPriceEngine
#pricing.engines.DIGITAL_SERVICES.url=http://svc-contract-management:38082/contractmanagement/api/v2/calculate-pricing
pricing.engines.DIGITAL_SERVICES.url=http://svc-contract-management:38082/acms/v2/calculate-pricing
pricing.engines.DIGITAL_SERVICES.systemToken={"ersReference":"1"}
pricing.engines.DIGITAL_SERVICES.authorization=1
pricing.engines.DIGITAL_SERVICES.operator=SUBSCRIBER_ENTITY


# Pricing mapping configuration.
# Mapping transaction profile with pricing engine.
# Every transaction need pricing engine.
# Syntax:
#       pricing.mappings.$ordering_number$.$property_name$=$property_value$
# Examples:
# Set classifier
#       pricing.mappings.1.classifier_match=.*/MOLLET_TRANSFER
# Set engine
#       pricing.mappings.1.engine=MOLLET_TRANSFER

pricing.mappings.1.classifier_match=.*/Subscriber/MOLLET_TRANSFER.*
pricing.mappings.1.engine=MOLLET_TRANSFER

pricing.mappings.2.classifier_match=.*/.*BALANCE.*
pricing.mappings.2.engine=FREE

pricing.mappings.3.classifier_match=.*/MOLLET_ACTIVATE.*
pricing.mappings.3.engine=FREE

pricing.mappings.4.classifier_match=.*/.*CHANGE_PASSWORD.*
pricing.mappings.4.engine=FREE

pricing.mappings.5.classifier_match=.*/MOLLET_DEPOSIT.*
pricing.mappings.5.engine=MOLLET_TRANSFER

pricing.mappings.6.classifier_match=.*/MOLLET_REGISTER.*
pricing.mappings.6.engine=FREE

pricing.mappings.7.classifier_match=.*/LAST_TRANSACTION.*
pricing.mappings.7.engine=FREE

pricing.mappings.8.classifier_match=.*/MOLLET_DEREGISTER.*
pricing.mappings.8.engine=MOLLET_DEREGISTER_SUBSCRIBER

pricing.mappings.9.classifier_match=.*/MOLLET_WITHDRAWAL.*
pricing.mappings.9.engine=MOLLET_TRANSFER

pricing.mappings.10.classifier_match=.*/Reseller/TOPUP.*
#pricing.mappings.10.engine=EXTERNAL_BUSINESS_LOGIC
pricing.mappings.10.engine=DIGITAL_SERVICES

pricing.mappings.11.classifier_match=.*/(Reseller|Subscriber)/CREDIT_TRANSFER.*
#pricing.mappings.11.engine=EXTERNAL_BUSINESS_LOGIC
pricing.mappings.11.engine=DIGITAL_SERVICES

pricing.mappings.12.classifier_match=.*/Subscriber/AIRTIME_TOPUP.*
pricing.mappings.12.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.13.classifier_match=.*/TRANSACTION_STATUS.*
pricing.mappings.13.engine=FREE

pricing.mappings.14.classifier_match=.*/MOLLET_VOUCHER_CREATE.*
pricing.mappings.14.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.15.classifier_match=.*/MOLLET_VOUCHER_REDEEM.*
pricing.mappings.15.engine=REDEEM_VOUCHER

pricing.mappings.16.classifier_match=.*/RESELLER_INFO.*
pricing.mappings.16.engine=FREE

pricing.mappings.17.classifier_match=.*/SUB_RESELLER_SEARCH.*
pricing.mappings.17.engine=FREE

pricing.mappings.18.classifier_match=.*/SUB_RESELLER_TYPES.*
pricing.mappings.18.engine=FREE

pricing.mappings.19.classifier_match=.*/REGISTER_SUB_RESELLER.*
pricing.mappings.19.engine=FREE

pricing.mappings.20.classifier_match=.*/REPORT.*
pricing.mappings.20.engine=FREE

pricing.mappings.21.classifier_match=.*/REGISTER_ETOPUP_SERVICE.*
pricing.mappings.21.engine=FREE

pricing.mappings.22.classifier_match=.*/*_ANONYMOUSID.*
pricing.mappings.22.engine=FREE

pricing.mappings.23.classifier_match=.*/AIRTIME_TRANSFER.*
pricing.mappings.23.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.24.classifier_match=.*/VAS.*
pricing.mappings.24.engine=VAS

pricing.mappings.25.classifier_match=.*/BLOCK_RESELLER.*
pricing.mappings.25.engine=FREE

pricing.mappings.26.classifier_match=.*/UNBLOCK_RESELLER.*
pricing.mappings.26.engine=FREE

pricing.mappings.27.classifier_match=.*/VALIDATE_TOPUP.*
pricing.mappings.27.engine=FREE

pricing.mappings.28.classifier_match=.*/TRANSACTIONS_SEARCH.*
pricing.mappings.28.engine=FREE

pricing.mappings.29.classifier_match=.*/RESET_BUSINESS_COUNTER.*
pricing.mappings.29.engine=FREE

pricing.mappings.30.classifier_match=.*/REVERSE_TRANSFER.*
pricing.mappings.30.engine=FREE

pricing.mappings.31.classifier_match=.*/GET_USER_INFO.*
pricing.mappings.31.engine=FREE

pricing.mappings.32.classifier_match=.*/RESELLER_ACTIVATE.*
pricing.mappings.32.engine=FREE

pricing.mappings.33.classifier_match=.*/GET_SUBSCRIBER_INFO.*
pricing.mappings.33.engine=FREE

pricing.mappings.34.classifier_match=.*/RESELLER_WITHDRAW.*
pricing.mappings.34.engine=SIMPLE_TRANSFER

pricing.mappings.35.classifier_match=.*/RESELLER_DEPOSIT.*
pricing.mappings.35.engine=SIMPLE_TRANSFER

pricing.mappings.36.classifier_match=.*/REGISTER_WEB_USER.*
pricing.mappings.36.engine=FREE

pricing.mappings.37.classifier_match=.*/Subscriber/ACTIVATE_SERVICE.*
pricing.mappings.37.engine=FREE

pricing.mappings.38.classifier_match=.*/Subscriber/MOLLET_TOPUP.*
pricing.mappings.38.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.39.classifier_match=.*/REVERSE_CREDIT_TRANSFER.*
pricing.mappings.39.engine=FREE

pricing.mappings.40.classifier_match=.*/REVERSE_TOPUP.*
pricing.mappings.40.engine=FREE

pricing.mappings.41.classifier_match=.*/Reseller/MOLLET_TRANSFER.*
pricing.mappings.41.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.42.classifier_match=.*/REVERSE_MOLLET_VOUCHER_CREATE.*
pricing.mappings.42.engine=FREE

pricing.mappings.43.classifier_match=.*/REVERSE_MOLLET_TRANSFER.*
pricing.mappings.43.engine=FREE

pricing.mappings.44.classifier_match=.*/RESERVE_VOUCHERS.*
pricing.mappings.44.engine=LEGACY_VOUCHER

pricing.mappings.45.classifier_match=.*/PURCHASE.*
pricing.mappings.45.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.46.classifier_match=.*/CANCEL_VOUCHER_RESERVATION.*
pricing.mappings.46.engine=FREE

pricing.mappings.47.classifier_match=.*/MOLLET_QUERY_VOUCHER.*
pricing.mappings.47.engine=FREE

pricing.mappings.48.classifier_match=.*/REPORT_SOLD_VOUCHERS.*
pricing.mappings.48.engine=FREE

pricing.mappings.49.classifier_match=.*/RESELLER_LINK_SUB_RESELLER.*
pricing.mappings.49.engine=FREE

pricing.mappings.50.classifier_match=.*/RESELLER_DELINK_SUB_RESELLER.*
pricing.mappings.50.engine=FREE

pricing.mappings.51.classifier_match=.*/SYSTEM_INFO.*
pricing.mappings.51.engine=FREE

pricing.mappings.52.classifier_match=.*/SYSTEM_OPERATION.*
pricing.mappings.52.engine=FREE

pricing.mappings.53.classifier_match=ERSGetPrincipalInformationTransaction/.*
pricing.mappings.53.engine=FREE

pricing.mappings.54.classifier_match=.*/Subscriber/TOPUP.*
pricing.mappings.54.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.55.classifier_match=.*/Subscriber/CUSTOM_OPERATION_FAF_.*
pricing.mappings.55.engine=FREE

pricing.mappings.56.classifier_match=.*/AdminUser/(SUPPORT_TRANSFER|CREDIT_TRANSFER).*
pricing.mappings.56.engine=SUPPORT_TRANSFER

pricing.mappings.57.classifier_match=.*/(Reseller|Subscriber|AdminUser)/CUSTOM_OPERATION_.*
pricing.mappings.57.engine=FREE

pricing.mappings.58.classifier_match=.*/Subscriber/CUSTOM_OPERATION_SUBSCRIBER_CMBK.*
pricing.mappings.58.engine=FREE

pricing.mappings.59.classifier_match=.*/Subscriber/P2P.*
pricing.mappings.59.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.60.classifier_match=.*/MM2ERS.*
pricing.mappings.60.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.61.classifier_match=.*/VOS_PURCHASE.*
pricing.mappings.61.engine=VOD_BUSINESS_LOGIC

pricing.mappings.62.classifier_match=.*/VOT_PURCHASE.*
pricing.mappings.62.engine=VOD_BUSINESS_LOGIC

pricing.mappings.63.classifier_match=.*/VOUCHER_REDEEM.*
pricing.mappings.63.engine=VOD_BUSINESS_LOGIC

pricing.mappings.64.classifier_match=.*/VOUCHER_REQUERY.*
pricing.mappings.64.engine=FREE

pricing.mappings.65.classifier_match=.*/(Reseller)/MICROCREDIT.*
pricing.mappings.65.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.66.classifier_match=.*/MICROCREDIT_RECOVERY.*
pricing.mappings.66.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.67.classifier_match=.*/MOLLET_VOUCHER_CREATE.*
pricing.mappings.67.engine=SIMPLE_TRANSFER

pricing.mappings.68.classifier_match=.*/MOLLET_VOUCHER_REDEEM.*
pricing.mappings.68.engine=SIMPLE_TRANSFER

pricing.mappings.69.classifier_match=.*/BULKVOUCHER_PURCHASE.*
pricing.mappings.69.engine=VOD_BUSINESS_LOGIC

pricing.mappings.70.classifier_match=.*/SELF_REGISTRATION.*
pricing.mappings.70.engine=FREE

pricing.mappings.71.classifier_match=.*/Reseller/PRODUCT_RECHARGE.*
pricing.mappings.71.engine=DIGITAL_SERVICES

pricing.mappings.72.classifier_match=.*/Reseller/FIBER_BUNDLE.*
pricing.mappings.72.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.73.classifier_match=.*/Reseller/MOBILE_MONEY.*
pricing.mappings.73.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.74.classifier_match=.*/SPECIAL_BUNDLE.*
pricing.mappings.74.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.75.classifier_match=.*/UPDATE_RESELLER_PAYLIMIT.*
pricing.mappings.75.engine=FREE

pricing.mappings.76.classifier_match=.*/Reseller/POSTPAID_TOPUP.*
pricing.mappings.76.engine=DIGITAL_SERVICES

pricing.mappings.77.classifier_match=.*/Reseller/CASHIN.*
pricing.mappings.77.engine=EXTERNAL_BUSINESS_LOGIC

pricing.mappings.78.classifier_match=.*/UPDATE_RESELLER.*
pricing.mappings.78.engine=FREE

pricing.mappings.79.classifier_match=.*/TRACKED_TRANSACTION.*
pricing.mappings.79.engine=FREE

pricing.mappings.80.classifier_match=.*/PRINCIPAL_TRANSACTION.*
pricing.mappings.80.engine=FREE

pricing.mappings.81.classifier_match=.*/DATA_BUNDLE.*
pricing.mappings.81.engine=DIGITAL_SERVICES

pricing.mappings.82.classifier_match=.*/Reseller/PULLBACK.*
pricing.mappings.82.engine=DIGITAL_SERVICES

pricing.mappings.83.classifier_match=.*/Reseller/GAMINGBOX.*
pricing.mappings.83.engine=DIGITAL_SERVICES

pricing.mappings.84.classifier_match=.*/SUPPORT_TRANSFER/.*
pricing.mappings.84.engine=DIGITAL_SERVICES

pricing.mappings.85.classifier_match=.*/RESELLER_PRODUCTS.*
pricing.mappings.85.engine=FREE

pricing.mappings.86.classifier_match=.*/SPL_BUNDLE.*
pricing.mappings.86.engine=DIGITAL_SERVICES

pricing.mappings.87.classifier_match=.*/RESELLER_CHANGE_STATE.*
pricing.mappings.87.engine=FREE

pricing.mappings.88.classifier_match=.*/Reseller/SUBSCRIBER_PRODUCTS.*
pricing.mappings.88.engine=FREE

##
# Pre pricing engine definition
# Mapping transaction profile with pre-pricing engine.
# Not all transactions need a pre-pricing engine.
# If there is a need to resolve few parameters that are need during actual pricing calculation,
# a specific class can be written and can be plugged here.
# Syntax:
#       pre-pricing.engines.$pre-pricing-engine-name$.$property_name$=$property_value$
# Example:
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.classname=DynamicProductFetchPrePricingEngine
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.url=http://svc-contract-management:38082/acms/fetch-products-by-params
# Any properties that are specific to your pricing engine, can be given as shown below
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.dynamicPayee_level=1
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.serviceParam.1.externalRequestType=EXRCTRFREQ
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.serviceParam.1.serviceType=RC
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.serviceParam.2.externalRequestType=EXPROMORCTRFREQ
#pre-pricing.engines.DYNAMIC_PRODUCT_SERVICES.serviceParam.2.serviceType=PROMORC

#### Pre pricing which will fetch the subscriber account class id and update the transaction product sku
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.classname=ProductBasedOnSubscriberAccountPrePricingEngine
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_joiner=2
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.gatewayList=*
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.gatewayList=ADNDIGITAL1,ADNDIGITAL2

#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_class_id.1.productSku=Pre
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_class_id.1.class_id_lower_limit=0
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_class_id.1.class_id_higher_limit=1000

#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_class_id.2.productSku=Post
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_class_id.2.class_id_lower_limit=1000
#pre-pricing.engines.P2P_TRANSFER_PRE_PRICING.product_class_id.2.class_id_higher_limit=10000



# pre-pricing mapping configuration.
# Mapping transaction profile with pre-pricing engine.
# Syntax:
#       pricing.mappings.$ordering_number$.$property_name$=$property_value$
# Examples:
#pre-pricing.mappings.1.classifier_match=.*/Reseller/<some_profile_id>.*
#pre-pricing.mappings.1.engine=DYNAMIC_PRODUCT_SERVICES

# Examples of product to provider mappings
#
#topup.productprovidermapping.1.product_sku=17
#topup.productprovidermapping.1.provider_id=SOMETELCO
#
#topup.productprovidermapping.2.product_sku=18
#topup.productprovidermapping.2.provider_id=TELCO2
#
#topup.productprovidermapping.3.product_sku=19
#topup.productprovidermapping.3.provider_id=SOMEOTHERTELCO

# Example of callback event
eventcallback.1.callback_type=CANCEL_TRANSACTION_CALLBACK
#This classname will call specific method in TXETransactionProcessingService
eventcallback.1.classname=CancelTransactionCallback
eventcallback.1.data.principal_id_type=ADMINUSER
eventcallback.1.data.principal_id=eventscheduler
eventcallback.1.data.principal_password=seamless

# Connection to event scheduler
# In order to enable it, you need to uncomment the url setting
# but you need to make sure that you have ers-eventscheduler install
#eventscheduler.connection.url=http://localhost:8337/eventscheduler
#eventscheduler.connection.user=username
#eventscheduler.connection.password=password

# Example of event scheduler jobs
# Type of transaction which requires some callback operation
#eventscheduler.1.classifier_match=ERSTransferTransaction/Reseller/MM2ERS/REQUEST/Completed/resultCode=1
# Event-Scheduler job id which needs to called
#eventscheduler.1.job_id=PENDING_TIMEOUT_EVENT
# Event type specifies which callback type will be called once the job is fired
#eventscheduler.1.event_type=CANCEL_TRANSACTION_CALLBACK
#eventscheduler.1.pending_timeout=13000

#TS-2999 Converting voucher purchase request into one step purchase request
purchase.request.oneStepPurchase=true

##By default resolvePrincipal() store a subscriber's msisdn only.
#If we set it to true, then it will update subscriber's identityNumber, identityType and extra fields. The usage can be found in ERSPurchaseProcessor.
purchase.request.enableUpdateSubscriberExtraInfo=false

#Auto create default user from STK
stk.request.autoCreateUser=false

#Principal id type check in ussdapp
principalid.typecheck.enable=false

#cache.cluster.1.url =localhost:7000
#cache.cluster.2.url =localhost:7001
#cache.cluster.3.url =localhost:7002
##################################################
# Set to true if distributed locking is to be used (For active active)
##################################################
useDistributedLocking=false
#transactionlocktimeout=60000
#locktimeout=600000

########################################### Profile Transformation Properties #########################################################
#
# For Transpforming any transaction's profile form one to another, we can use these configurations.
#profile_transformations.<index>.id = <UNIQUE ID to avoid overriding the existing properties>
#profile_transformations.<index>.old_profile = <Exisiting profile of the transaction>
#profile_transformations.<index>.new_profile = <Desired Profile for the new transaction>
#profile_transformations.<index>.criteria = <A freemarker expression which should evaluate to TRUE for the target transactions>
#
# Apart from these configuration we also need to add Transaction_Types in Support System properties and PriceEngine in txe.properties
# for the new profile of the transactions.#
#

######################################################################################################################################
profile_transformations.1.id = TOPUP_TO_P2P
profile_transformations.1.old_profile = TOPUP
profile_transformations.1.new_profile = P2P
profile_transformations.1.criteria = <#if transaction.productSKU??><#if transaction.productSKU="P2P">true</#if></#if>
######################################################################################################################################
profile_transformations.2.id = TOPUP_TO_CASHIN
profile_transformations.2.old_profile = TOPUP
profile_transformations.2.new_profile = CASHIN
profile_transformations.2.criteria = <#if transaction.productSKU??><#if transaction.productSKU="CASHIN">true</#if></#if>
######################################################################################################################################
profile_transformations.3.id = TOPUP_TO_DATA_BUNDLE
profile_transformations.3.old_profile = TOPUP
profile_transformations.3.new_profile = DATA_BUNDLE
profile_transformations.3.criteria = <#if transaction.productSKU??><#if transaction.productSKU?matches("BUNDLE_.*")>true</#if></#if>
######################################################################################################################################
profile_transformations.4.id = TOPUP_TO_SMS_BUNDLE
profile_transformations.4.old_profile = TOPUP
profile_transformations.4.new_profile = SMS_BUNDLE
profile_transformations.4.criteria = <#if transaction.productSKU??><#if transaction.productSKU?matches("SMS_.*")>true</#if></#if>
######################################################################################################################################
profile_transformations.5.id = TOPUP_TO_COMBO_BUNDLE
profile_transformations.5.old_profile = TOPUP
profile_transformations.5.new_profile = COMBO_BUNDLE
profile_transformations.5.criteria = <#if transaction.productSKU??><#if transaction.productSKU?matches("COMBO_.*")>true</#if></#if>
######################################################################################################################################
profile_transformations.6.id = TOPUP_TO_IDD_BUNDLE
profile_transformations.6.old_profile = TOPUP
profile_transformations.6.new_profile = IDD_BUNDLE
profile_transformations.6.criteria = <#if transaction.productSKU??><#if transaction.productSKU?matches("IDD_.*")>true</#if></#if>
######################################################################################################################################
profile_transformations.7.id = TOPUP_TO_CRBT
profile_transformations.7.old_profile = TOPUP
profile_transformations.7.new_profile = CRBT
profile_transformations.7.criteria = <#if transaction.productSKU??><#if transaction.productSKU = "CRBT" >true</#if></#if>
######################################################################################################################################
profile_transformations.8.id = TOPUP_TO_REDEEM
profile_transformations.8.old_profile = TOPUP
profile_transformations.8.new_profile = VOUCHER_REDEEM
profile_transformations.8.criteria = <#if transaction.productSKU??><#if transaction.productSKU = "REDEEM" >true</#if></#if>
######################################################################################################################################
profile_transformations.9.id = PURCHASE_TO_VOT
profile_transformations.9.old_profile = PURCHASE
profile_transformations.9.new_profile = VOT_PURCHASE
profile_transformations.9.criteria = <#if transaction.productSKU??><#if transaction.productSKU = "VOT" >true</#if></#if>
######################################################################################################################################
profile_transformations.10.id = PURCHASE_TO_VOS
profile_transformations.10.old_profile = PURCHASE
profile_transformations.10.new_profile = VOS_PURCHASE
profile_transformations.10.criteria = <#if transaction.productSKU??><#if transaction.productSKU = "VOS" >true</#if></#if>
######################################################################################################################################
profile_transformations.11.id = TOPUP_TO_FBB
profile_transformations.11.old_profile = TOPUP
profile_transformations.11.new_profile =FIBER_BUNDLE
profile_transformations.11.criteria = <#if transaction.productSKU?? ><#if transaction.productSKU?matches("FBB_.*")>true</#if></#if>
######################################################################################################################################
profile_transformations.12.id = APPROVE_TO_IFS_TRANSFER_APPROVE
profile_transformations.12.old_profile = IFS_TRANSFER
profile_transformations.12.new_profile = IFS_TRANSFER_APPROVE
profile_transformations.12.criteria = <#if transaction.resultProperties??><#if transaction.resultProperties.get("TRANSACTION_TYPE")?? && transaction.resultProperties.get("TRANSACTION_TYPE")="IFS_TRANSFER_APPROVE">true</#if></#if>


######################################################################################################################################
profile_transformations.13.id = PURCHASE_CHANGE_STATE
profile_transformations.13.old_profile = PURCHASE
profile_transformations.13.new_profile = VOUCHER_CHANGE_STATE
profile_transformations.13.criteria = <#if transaction.transactionOperation??><#if transaction.transactionOperation = "CHANGE_STATE" >true</#if></#if>
######################################################################################################################################

######################################################################################################################################
profile_transformations.14.id = PURCHASE_SEARCH
profile_transformations.14.old_profile = PURCHASE
profile_transformations.14.new_profile = VOUCHER_SEARCH
profile_transformations.14.criteria = <#if transaction.fields??><#if transaction.fields.searchBySerial?? >true</#if></#if>
######################################################################################################################################

######################################################################################################################################
profile_transformations.15.id = ZERO_PRICED_PRODUCT_SALE
profile_transformations.15.old_profile = TOPUP
profile_transformations.15.new_profile = ZERO_PRICED_PRODUCT
profile_transformations.15.criteria = <#if transaction.productSKU??><#if transaction.productSKU = "OFFER_SIM_CARD" >true</#if></#if>
######################################################################################################################################


######################################################################################################################################
# Transformation of TOPUP profile into PRODUCT_RECHARGE.
profile_transformations.16.id = TOPUP_TO_PRODUCT_RECHARGE
profile_transformations.16.old_profile = TOPUP
profile_transformations.16.new_profile = PRODUCT_RECHARGE
profile_transformations.16.criteria = <#if (transaction.getField("TRANSACTION_TYPE"))?? && transaction.getField("TRANSACTION_TYPE") == "PRODUCT_RECHARGE">true</#if>
######################################################################################################################################

auto_commission_reversal=false
disable_updateoffer_for_databundle=false
######################################################################################################################################
# Reseller Rewards Account inclusion in transaction object.
include_rewards_account_in_transaction_object=false
rewards_account_type_id=REWARDS

cislink.account_type_id.data_bundle=DATA_BUNDLE
cislink.account_type_id.sms_bundle=SMS_BUNDLE
cislink.account_type_id.combo_bundle=COMBO_BUNDLE
cislink.account_type_id.idd_bundle=IDD_BUNDLE

# values of this config will be the profileId in order to fetch the relevant account service
middleware.account_type_id.special_bundle=SPL_BUNDLE

# Allow default account type for query account requests
useDefaultAccountTypeForAccountBalance=true

# Mobile money enhancement
# Default value is true
# mobile_money_using_parent=true - buy stock from parent(old implementation)
# mobile_money_using_parent=false - buy stock from the distributor in their hierarchy below the operator.
mobile_money_using_parent=true
default_mobile_money_account=reseller-id
# Possible values: RESELLERID/RESELLERMSISDN
# Default value is RESELLERID
default_mobile_money_account_type=RESELLERID
fallback_on_sender_not_active=false
# If mobile_money_using_parent=false AND dynamic_hierarchy_enable=true then fallback reseller index
# Reseller path : MTN/dist1/subdist1
# If mobile_money_fallback_index=0 then value is MTN
# If mobile_money_fallback_index=1 then value is dist1
# If mobile_money_fallback_index=2 then value is subdist1
mobile_money_fallback_index=1
mm_check_distributor_in_hierarchy=false
mm_distributor_reseller_type_in_hierarchy=DISTRIBUTOR

#dynamic_hierarchy_enable=false //(By default) with current implemention it always takes distributor in their hierarchy below the operator
#dynamic_hierarchy_enable=true //it will take grandparent from given reseller path

# Will skip sender validation in processor for momo transaction
#skip_sender_validation_for_mm2ers=true

#Use messaging queue for business actions.
#Business actions are created with class TransactionNotification
useMessagingQueue=false
queue.host=localhost
queue.port=5672
queue.username=seamless
queue.password=seamless

momo_default_resellers_file_name=momoResellers.txt

#For Creating Rest Template (rest client) pool
ers_template_wrapper_pool.min_objects=5
ers_template_wrapper_pool.max_objects=40
ers_template_wrapper_pool.validation_interval=120
##### For UBP-1428 ##########
ers_template_wrapper_pool.connection_request_timeout=10000
ers_template_wrapper_pool.connect_timeout=10000
ers_template_wrapper_pool.read_timeout=10000

####### OkHttpClient Configuration (Non Mandatory)
okhttpclient.read_timeout.ms=30000
okhttpclient.connect_timeout.ms=35000

########## FTTX BUNDLE Configurations #############

fttx_bundle_profile_id=FIBER_BUNDLE
fttx_account_type=FTTX

###################################################

# autofetch childReseller balance while delinking subreseller from these types
auto_fetch_child_reseller_balance.isEnabled=false
auto_fetch_child_reseller_balance.reseller_types=pos
auto_fetch_child_reseller_balance.adminUserId=root
auto_fetch_child_reseller_balance.adminUserPassword=1234
auto_fetch_child_reseller_balance.currency=NGN
auto_fetch_child_reseller_balance.channel=webadmin

###################################################

#### Thread Pool Manager Configuration
# default = name of the default thread pool
# pools.pool-name1.targetId= Target Id for which the pool is created.
#       1. Fully qualified class name for resolving thread pools through class hierarchy recursively.
#       2. Target Name for resolving thread pools through a set of target names. Used in conjunction with poolName property of the actions.
# pools.pool-name1.corePoolSize= Minimum pool size for the thread pool. Should be calculated based on flowcontrol's max parallel requests.
# pools.pool-name1.maxPoolSize= Maximum pool size for the thread pool. Should be calculated based on flowcontrol's max parallel requests.
# pools.pool-name1.keepAliveTime= Time for which the idle thread is kept alive. Default is 60 seconds.
# pools.pool-name1.keepAliveTimeUnit= The unit of time for keepAliveTime. Default is SECONDS.
# pools.pool-name1.throwsTaskRejectionException= Whether to throw exception when execution is rejected. Default is true.
#
threadpoolmanager.default=default

threadpoolmanager.pools.sms-pool.targetId=com.seamless.ers.txe.businesslogic.engine.actions.ReceiverSMSNotification
threadpoolmanager.pools.sms-pool.corePoolSize=25
threadpoolmanager.pools.sms-pool.maxPoolSize=40
threadpoolmanager.pools.sms-pool.keepAliveTime=60000
threadpoolmanager.pools.sms-pool.keepAliveTimeUnit=MILLISECONDS

threadpoolmanager.pools.async-actions-pool.targetId=com.seamless.ers.txe.businesslogic.engine.actions.AsyncBusinessActionBase
threadpoolmanager.pools.async-actions-pool.corePoolSize=10
threadpoolmanager.pools.async-actions-pool.maxPoolSize=40
threadpoolmanager.pools.async-actions-pool.keepAliveTime=60000
threadpoolmanager.pools.async-actions-pool.keepAliveTimeUnit=MILLISECONDS

threadpoolmanager.pools.default.targetId=defaultTarget
threadpoolmanager.pools.default.corePoolSize=1
threadpoolmanager.pools.default.maxPoolSize=40
threadpoolmanager.pools.default.keepAliveTime=60000
threadpoolmanager.pools.default.keepAliveTimeUnit=MILLISECONDS


## If the original microcredit transaction is missing, ignore it and continue.
microcredit_recovery.ignore_missing_original_transaction=true

##paymentprovider reseller and account details
paymentprovider.reseller.id=PAYMENTPROVIDER
paymentprovider.reseller.type=RESELLERID
paymentprovider.reseller.account.id=PAYMENTPROVIDER
paymentprovider.reseller.account.type=RESELLER


################# Custom Transaction Profiles For Profile Based Conditions ###########
# These properties will be translated into Map an which will used everywhere when
# profile based conditions are to be set.
# custom_profiles.<Profile Default Name which is being used in code to access relevent profileId>.profileId=<Profile which is decided after the Transformation>
#
custom_profiles.fttx_bundle=FIBER_BUNDLE
custom_profiles.ifs_transfer=IFS_TRANSFER
custom_profiles.approve_ifs_transfer=APPROVE_IFS_TRANSFER

###########Special Offer Bonus Query##########
#specialBundle=SPECIAL_BUNDLE

#reportid.CAMPAIGN_SPECIAL_OFFER_STATUS=CAMPAIGN_SPECIAL_OFFER_STATUS
##############################################

######################### Config For Adding New Fields to ERSTransactionProcessingServiceResponse object #########################
#If a new Field Value is to be added then update the property by adding a comma and providing the new field
ersGetPrincipalInformationProcessor.txn.txnProperties.extraKeys=ROLE_ID,BLOCKED

##############################################################################
# Transaction Specific properties. This can be used for adding new properties
# without any change in TXEConfig.
# SYNTAX = transactions.<profileID>.<Property-Key>=<Property Value>
#
#
# bypass_sender_state_validation = To Bypass sender principal state while performing
# manual adjustments or support transfers. Whether sender is blocked, deactivated or is
# in any state other than active, the manual adjustment will be done if its set to TRUE.
#
# bypass_receiver_state_validation = To Bypass receiver principal state while performing
# manual adjustments or support transfers. Whether receiver is blocked, deactivated or is
# in any state other than active, the manual adjustment will be done if its set to TRUE.
##############################################################################
transactions.SUPPORT_TRANSFER.bypass_sender_state_validation=false
transactions.SUPPORT_TRANSFER.bypass_receiver_state_validation=false

# ERSWSReseller connection
ers_reseller_connection.url=http://localhost:8777/txe/reseller
ers_reseller_connection.user=extclientproxy
ers_reseller_connection.password=extclientproxy
##############################################################################

##############################################################################
# Config To getKey from Transcation Properties to make
# non-success transaction the referred of auto-restocking in MTN-SA
commission.payout.NON_SUCCESS.referred.transaction.key=REFERRED_NONSUCCESS_TRANSACTION

voucher_management_system.endpoints.1.id=BULK_VOUCHER_ORDER
voucher_management_system.endpoints.1.url=http://localhost:9083/vms/v1/order/voucher

voucher_management_system.endpoints.2.id=SINGLE_VOUCHER_ORDER
voucher_management_system.endpoints.2.url=http://localhost:9083/vms/v2/voucher/purchase

voucher_management_system.endpoints.3.id=REDEEM_VOUCHER
voucher_management_system.endpoints.3.url=http://localhost:9083/vms/v1/voucher/redeem

voucher_management_system.endpoints.4.id=VALIDATE_VOUCHER
voucher_management_system.endpoints.4.url=http://localhost:9083/vms/v1/voucher/validate

voucher_management_system.endpoints.5.id=UPDATE_VOUCHER_ATTRIBUTES
voucher_management_system.endpoints.5.url=http://localhost:9083/vms/v1/voucher/attributes

voucher_management_system.endpoints.6.id=BULK_VOUCHER_ORDER_SEARCH
voucher_management_system.endpoints.6.url=http://localhost:9083/vms/v1/vouchers/search

voucher_management_system.endpoints.7.id=UPDATE_VOUCHER_ATTRIBUTES_V2
voucher_management_system.endpoints.7.url=http://localhost:9083/vms/v2/voucher/attributes

voucher_management_system.endpoints.8.id=SAVE_SUBSCRIBER_INFORMATION
voucher_management_system.endpoints.8.url=http://localhost:9083/vms/v1/subscriber/redeem/notify

# Multiple channels needs to be splitted by comma
voucher_management_system.saveSubscriberInformation.validateOperation.channel=SOAP,USSD

# Notification manager url for sending messages given transaction reference
send_notification_for_transaction_with_notification_manager_url = http://svc-notification-manager:8277/send-txe-notification
##############################################################################
# Config for spring boot
spring.profiles.active=PROD
server.port=8088

springdoc.api-docs.path=/txe-api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Disabling the /v3/api-docs enpoint
springdoc.api-docs.enabled=true

# Disabling the swagger-ui
springdoc.swagger-ui.enabled=true

# API version to show on swagger UI
txe_api.version=1.0

# Log file path
logging.file=/var/seamless/log/txe/txe.log

############# CORS config ####################
cors.enable=true
#comma separated origin list or star(*) to allow all
cors.allowedorigins=*
http.response.headers=system-token,authorization


#unified one support
dms.updateResellerInfo=dms/v1/resellers/update

#-------------------------------------------------------------------------------------
# Authentication Configuration (through nginx)
#-------------------------------------------------------------------------------------
sob.idms.baseUri=http://svc-nginx:18080/
sob.idms.loginUri=login-backend
sob.idms.loginChannel=SEAMLESS-UNIFIED
sob.idms.loginUserId=OPERATOR
sob.idms.loginPassword=2023

sob.idms.baseUriWithPort=http://svc-identity-management:8219
sob.idms.resolveUri=/auth/v2/resolve
# If isValidateUserEnabled then TXE will be calling validateUserUri else resolveUri. Benefit of calling validateUserUri is it will be bringing ResellerInfo as well so we can save a call.
sob.idms.validateUserUri=/auth/v2/validateUser?validatePin=
sob.idms.isValidateUserEnabled=true
sob.idms.validatePin=true
sob.idms.validatePinForChannels=USSD

# Enable DataFeeder
log4j.additivity.com.seamless.common.data.dump.DataFeeder=true
#-------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------
#Configuration for executor service
#-------------------------------------------------------------------------------------
threadpoolmanager.pools.dataFeed.targetId=com.seamless.common.data.dump.dataFeed
threadpoolmanager.pools.dataFeed.corePoolSize=25
threadpoolmanager.pools.dataFeed.maxPoolSize=40
threadpoolmanager.pools.dataFeed.keepAliveTime=60000
threadpoolmanager.pools.dataFeed.keepAliveTimeUnit=MILLISECONDS
#-------------------------------------------------------------------------------------

#Configure freemarker
#-------------------------------------------------------------------------------------
dataFeed.freemarker.file.path=/opt/seamless/conf/txe/templates
#-------------------------------------------------------------------------------------

#Data feed version
#-------------------------------------------------------------------------------------
dataFeed.version=1
dataFeed.componentName=txe
#-------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------
# Data Feed templates
#-------------------------------------------------------------------------------------
template.TRANSACTION=transaction.ftl
#-------------------------------------------------------------------------------------

#unified one support
#sob.fied one support
sob.seamless-one-support-enabled=true
#DMS
sob.dms.seamless-one-support-enabled=true
sob.dms.baseUri=http://svc-dealer-management:8033/
sob.dms.getResellerInfo=dms/v1/resellers/getResellerInfo
sob.dms.updateResellerInfo=dms/v1/resellers/update
sob.dms.changeStateUri=dms/auth/v1/resellerChangeState
sob.dms.linkSubResellerUri=dms/auth/linkReseller
sob.dms.deLinkSubResellerUri=dms/auth/deLinkReseller
sob.dms.changePassword=dms/auth/changePassword
sob.use-dms-for-reseller-operations=true

sob.ams.baseUri=http://svc-account-management:8092/
sob.ams.makeAccountTransactionUri=ams/v1/operations/makeAccountTransaction
sob.pms.baseUrl=http://svc-product-management:8012/pms
sob.pms.searchProductVariantsUri=/v1/product/variant/search
sob.pms.fetchProductUri=/v1/product



#----------------------------------------------------------------------
# Properties for bi-engine based reporting
#----------------------------------------------------------------------
# Bi-engine report fetching url
sob.reporting.baseFetchReportURL=http://svc-bi-engine:8917/bi-engine/fetch
# Following are the mappings used for Reporting response keys:Txe Response Keys
sob.reporting.search_reseller_information.requiredKeyValueMappings=Last Transaction Type:last_transaction_type,Last Transaction Time:last_transaction_time,Last Transaction Status:last_transaction_status
#-------------------------------------------------------------------------------------
# Properties for Region Management SystemAPI(s)
#-------------------------------------------------------------------------------------
sob.rgms.baseUrl=http://svc-region-management:8000/rgms/v1/
sob.rgms.fetchCachedRegionUri=region/cache/${msisdn}/${ersReference}/${initiatorType}/${locationValidationType}

#----------------------------------------------------------------------
# Properties for Advance Contract Management SystemAPI(s)
#----------------------------------------------------------------------
sob.acms.baseUrl=http://svc-contract-management:38082/acms
sob.acms.fetchProductRangesUri=/v2/fetch-product-range/
sob.acms.fetchProductVariantsRuleMappingsUri=/product-variant-rule-mapping/

#################### Principal Type Based on RESELLERUSERNAME ####################
#sob.posuser_as_userid_enabled=true

#----------------------------------------------------------------------
# ENABLE/DISABLE REST ENDPOINT OF DMS CALL FOR PRINCIPAL RESOLVE ###############
#----------------------------------------------------------------------
sob.resolve_principal_using_dms=false
#----------------------------------------------------------------------
# ENABLE/DISABLE REST ENDPOINT OF AMS CALL ###############
#----------------------------------------------------------------------
#sob.ams_restCall_enabled=true
#DMS
#sob.dms.seamless-one-support-enabled=true
#sob.dms.baseUri=http://svc-dealer-management:8033/
#sob.dms.getResellerInfo=dms/v1/resellers/getResellerInfo
#sob.dms.updateResellerInfo=dms/v1/resellers/update
#sob.dms.changeStateUri=dms/auth/v1/resellerChangeState
#-------------------------------------------------------------------------------------
# Authentication Configuration (through nginx)
#-------------------------------------------------------------------------------------
#sob.idms.baseUri=http://svc-nginx:18080/
#sob.idms.loginUri=login-backend
#sob.idms.loginChannel=SEAMLESS-UNIFIED
#sob.idms.loginUserId=OPERATOR
#sob.idms.loginPassword=2021


#----------------------------------------------------------------------
# Properties for STD link to call TPK customer.
#----------------------------------------------------------------------
#sob.std.customerId=TPK
#sob.std.baseUri=http://localhost:8098/standard-link/
#sob.std.requestUri=request

# server type for get subscriber profile
# possible values: 0 for JBOSS and 1 for CPS
#sob.std.serverType=0

#----------------------------------------------------------------------
# Adding default values for Postpaid API call
# paymentMethod --> it has multiple values, for now we are using 9901 as its default value.
# accountBalanceType --> Default value for Account Balance Type for TPK
#----------------------------------------------------------------------
#sob.std.paymentMethod=9901
#sob.std.accountBalanceType=3000
#sob.std.operateType=2
#sob.std.voiceOffnetAccountType=5101
#sob.std.voiceOnnetAccountType=5101
#sob.std.dataAccountType=6459
#sob.std.smsAccountType=5201
#sob.std.expiryTimeDateFormat=yyyyMMddhhmmss
#sob.std.voiceMultiplyingFactor=8
#sob.std.dataMultiplyingFactor=60
#----------------------------------------------------------------------
# Property for gamingbox api call
#----------------------------------------------------------------------
#sob.std.gamingBoxUtmSource=web

#AMS config
#for api call via nginx
#sob.ams.baseUri=http://localhost/api/
#for direct api call
#sob.ams.baseUri=http://svc-account-management:8092/
#sob.ams.makeAccountTransactionUri=ams/v1/operations/makeAccountTransaction

#----------------------------------------------------------------------
# Properties for Product Management System API(s)
#----------------------------------------------------------------------
#sob.pms.baseUrl=http://svc-product-management:8012/pms
#sob.pms.searchProductVariantsUri=/v1/product/variant/search
#sob.pms.fetchProductUri=/v1/product
sob.pms.getProductBySku=/product/sku/{productSku}
sob.pms.getProductByVariantId=/v1/product/variant/{variantId}
sob.pms.getProductByCode=/v1/product/code/{productCode}
#----------------------------------------------------------------------
# Properties for Advance Contract Management SystemAPI(s)
#----------------------------------------------------------------------
#sob.acms.baseUrl=http://svc-contract-management:38082/acms
#sob.acms.fetchProductRangesUri=/v2/fetch-product-range/
#sob.acms.fetchProductVariantsRuleMappingsUri=/product-variant-rule-mapping/

#----------------------------------------------------------------------
# Config for Inbound API related to reseller products
# as per CONTRACT/RANGE/COMMON IN both
#----------------------------------------------------------------------
fetchResellerProductsBasedOn=RANGE

#----------------------------------------------------------------------
# Properties for bi-engine based reporting
#----------------------------------------------------------------------
# Bi-engine report fetching url
#sob.reporting.baseFetchReportURL=http://svc-haproxy:8917/bi-engine/fetch
# Following are the mappings used for Reporting response keys:Txe Response Keys
#sob.reporting.search_reseller_information.requiredKeyValueMappings=Last Transaction Type:last_transaction_type,Last Transaction Time:last_transaction_time,Last Transaction Status:last_transaction_status
#-------------------------------------------------------------------------------------
# Properties for Region Management SystemAPI(s)
#-------------------------------------------------------------------------------------
#sob.rgms.baseUrl=http://svc-region-management:8000/rgms/v1/
#sob.rgms.fetchCachedRegionUri=region/cache/${msisdn}/${ersReference}/${initiatorType}/${locationValidationType}
#-------------------------------------------------------------------------------x------

#----------------------------------------------------------------------
# Config for system token having just ersReference to call internal component
#----------------------------------------------------------------------
sob.systemToken={"ersReference":"?"}


#################### Enable/Disable Transaction Metric Log ####################
#transactionMetricsLogEnabled=true

##################### config added to identify account type based on subscriber account service id
subscriber.account_class_id.1.account_type=AIRTIME_PREPAID
subscriber.account_class_id.1.class_id_lower_limit=0
subscriber.account_class_id.1.class_id_higher_limit=1000

subscriber.account_class_id.2.account_type=AIRTIME_POSTPAID
subscriber.account_class_id.2.class_id_lower_limit=1000
subscriber.account_class_id.2.class_id_higher_limit=10000


########################### searchArchivedTransaction ###################
#the configured reseller type will have complete view of all the transaction records
searchArchivedTransaction.viewAllTransaction.resellerType=ALL

#This property can handle comma seperate multiple values, to add sender,receiver and initiator principal fields in transaction log for a R2R transfer
#logPrincipalFields_to_transactionLog=

#call to coreproxy to getResellerChildrenCount in LINK/UNLINK operation.
fetchChildrenCountFromCoreproxy=false

## In customOperation Processor after super validations, resolve principle call is required or not.
isMultiResolvePrincipalRequired=true

fetchChildTransStockRequest=true
stockRequestSearchFieldTypes=RECEIVER_RESELLER_ID
stockRequstChildSearchLevel=10
stockRequestChildSearchMaxCount=10
stockRequestApplyFilterationOnExpiry=true

# check added to enable reseller to sale databundle and bypass filtration
checkProductRuleAssociations=false

sob.dms.changePassword=dms/auth/changePassword

sob.use-dms-for-reseller-operations=true



#The properties for reversal pending transactions

# The supported reversal operations
#reversal.supported_tx_profiles=CREDIT_TRANSFER, MOLLET_VOUCHER_CREATE, MOLLET_TRANSFER

enable_partial_reversal_R2R=false
enable_partial_reversal_R2S=false

#Check if we need to pick region from reseller data
enable_region_from_reseller_data=true
pick_max_sender_balance_from_account_trasnactions=true

senderAccountTagList=SENDER
receiverAccountTagList=RECEIVER
use_comments=true

###### UBP-1428 #######
ers_template_wrapper_pool.connection_request_timeout=10000
ers_template_wrapper_pool.connect_timeout=10000
ers_template_wrapper_pool.read_timeout=10000

## As per release 1.0.1
use_reseller_notification_language_for_channel_notification=false

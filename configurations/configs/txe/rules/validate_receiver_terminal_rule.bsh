import com.seamless.ers.interfaces.ersifclient.dto.ResultCodes;
import com.seamless.ers.txe.transaction.model.ERSTransferTransaction;
import com.seamless.ers.interfaces.ersifcommon.dto.terminals.TerminalStatus;
import com.seamless.ers.interfaces.ersifcommon.dto.Principal;

public boolean validate(com.seamless.ers.txe.businesslogic.BusinessLogicTransaction transaction)
{
		logger.info("Receiver validation rule is started");
        ERSTransferTransaction transferTransaction = (ERSTransferTransaction)transaction.getTransaction();
        Principal principal = transferTransaction.getReceiverPrincipal();
       
        if (principal.getResellerData().getTerminalData()
						.getTerminalStatus() != TerminalStatus.Active)
		{

			if (principal.getResellerData() != null && principal.getResellerData().getFields() != null &&
			    principal.getResellerData().getFields().get("terminal_status") != null &&
				principal.getResellerData().getFields().get("terminal_status").equals("4"))
			{
				logger.info("Failed to validate reseller, the reseller terminal is blocked.");

				transferTransaction.setResultCode(ResultCodes.RECEIVER_IS_BLOCKED);
				return false;
			}
			else
			{
				logger.info("Failed to validate reseller, the terminal is not active");

				transferTransaction.setResultCode(ResultCodes.RECEIVER_IS_NOT_ACTIVE);
				return false;
			}
		}
		else 
		{
			return true;
		}
}

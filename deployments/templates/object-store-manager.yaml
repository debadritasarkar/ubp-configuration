apiVersion: v1
kind: PersistentVolume
metadata:
  name: logs-object-store-{{ .Values.nSpace }}
  namespace: {{ .Values.nSpace }}
  labels:
    type: local
    name: logs-object-store-{{ .Values.nSpace }}
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "{{ .Values.logs }}/object-store-manager"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-object-store-{{ .Values.nSpace }}
  namespace: {{ .Values.nSpace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
  selector:
    matchLabels:
      type: local
      name: logs-object-store-{{ .Values.nSpace }}
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: object-store
  namespace: {{ .Values.nSpace }}
  labels:
    app: object-store
spec:
  replicas: {{ .Values.replica.objectstore }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge:  40%
       maxUnavailable: 20%
  selector:
    matchLabels:
      app: object-store
  template:
    metadata:
      labels:
        app: object-store
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - object-store
            topologyKey: "kubernetes.io/hostname"
      {{- include "hostaliases" . | indent 6 }}
      dnsConfig:
        nameservers:
        - 8.8.8.8
      containers:
      - name: object-store
        image: {{ .Values.image.objectstore }}
        imagePullPolicy: IfNotPresent
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 20
        {{- if eq .Values.telemetry_client true }}
        env:
        - name: JAVA_TOOL_OPTIONS
          value: "-Xms500M -Xmx2000M -XX:+UseContainerSupport -XX:MaxRAMPercentage=90.0 -XX:ActiveProcessorCount=1"
        {{- end }}
        {{- if eq .Values.resourceApply true }}
        resources:
          limits:
            cpu: '1'
            memory: 500Mi
          requests:
            cpu: '0.5'
            memory: 2Gi
        {{- end }}
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: tz-{{ .Values.country }}
          mountPath: /etc/localtime
        - name: vol-cm-main
          mountPath: {{ .Values.conf }}
        - name: vol-cm-object-store-main
          mountPath: {{ .Values.conf }}/object-store-manager
        - name: vol-cm-object-store-locales
          mountPath: {{ .Values.conf }}/object-store-manager/locales
        - name: vol-logs-object-store
          mountPath: {{ .Values.logs }}/object-store-manager
      volumes:
      - name: tz-{{ .Values.country }}
        hostPath:
          path: /usr/share/zoneinfo/{{ .Values.timzone }}
      - name: vol-cm-main
        configMap:
          name: cm-main
      - name: vol-cm-object-store-main
        configMap:
          name: cm-object-store-main
      - name: vol-cm-object-store-locales
        configMap:
          name: cm-object-store-locales
      - name: vol-logs-object-store
        persistentVolumeClaim:
          claimName: logs-object-store-{{ .Values.nSpace }}
      - name: vol-cm-object-store-copy
        configMap:
          name: cm-object-store-copy
      imagePullSecrets:
      - name: {{ .Values.secret }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: object-store
  name: svc-object-store
  namespace: {{ .Values.nSpace }}
spec:
  ports:
  - port: 3000
    {{- if eq .Values.nSpace "ers-dev" }}
    nodePort: 30024
    {{- else if eq .Values.nSpace "ers-staging" }}
    nodePort: 31024
    {{- else if eq .Values.nSpace "ers" }}
    nodePort: 32024
    {{- end }}
    targetPort: 3000
  selector:
    app: object-store
  type: NodePort
